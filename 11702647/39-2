#include<stdio.h>
	#define executed 1
	#define not_exec 0
	//structure for a process
	typedef struct process
	{
	    int arr;        //arrival time
	    int bt;         //burst time
	    int wt;		//waiting time
	    int ft;		//finish time
	    int status;
	} process;
	

	void sjf(process *pr,int n,float *awt,float *atat);
	int shortestProcess(process *pr,int n,int ct);
	int sumArray(int *arr,int n);
	void dispArray(int *arr,int n);
	

	int main()
	{
	    int n,i;
	    float awt,atat;
	    process pr[20];
	    printf("\nEnter the no. of processes:");
	    scanf("%d",&n);
	

	    for(i=0; i<n; i++)
	    {
	        printf("\nEnter the arrival and burst time of process %d: ",i+1);
	        scanf("%d %d",&pr[i].arr,&pr[i].bt);
	    }
	    sjf(pr,n,&awt,&atat);
	    printf("\nThe average waiting time(AWT)=%.2f",awt);
	    printf("\nThe average turnaround time(ATAT)=%.2f\n",atat);
	    return 0;
	}
	void sjf(process *pr,int n,float *awt,float *atat)
	{
		int i,ct=0,spi;	//ct->current time,spi->shortest process index
		//initialising each process as not executed
		for(i=0;i<n;i++)
		{
			pr[i].status=not_exec;
		}
		printf("\nThe order of execution of processes is:");
		
